<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--注册bean-->
    <bean id="userService" class="com.kai.service.UserServiceImpl"/>
    <bean id="beforeLog" class="com.kai.log.BeforeLog"/>
    <bean id="afterLog" class="com.kai.log.AfterLog"/>

    <!--方式一:使用原生Spring的API接口-->
    <!--配置aop,需要导入aop约束-->
    <aop:config>
        <!--切入点:  expression:表达式  execution(要执行的位置)-->
        <aop:pointcut id="pointcut" expression="execution(* com.kai.service.UserServiceImpl.*(..))"/>
        <!--执行环绕增强-->
        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
    </aop:config>

    <!--方式二:自定义类-->
    <bean id="diy" class="com.kai.diy.DiyPointCut"/>
    <aop:config>
        <!--自定义切面,ref要引入的类-->
        <aop:aspect ref="diy">
            <!--切入点-->
            <aop:pointcut id="pointcut" expression="execution(* com.kai.service.UserServiceImpl.*(..))"/>
            <!--通知-->
            <aop:before method="before" pointcut-ref="pointcut"/>
            <aop:after method="after" pointcut-ref="pointcut"/>
        </aop:aspect>
    </aop:config>

    <!--方式三:使用注解-->
    <bean id="annotationPointCut" class="com.kai.diy.AnnotationPointCut"/>
    <!--开启注解支持  JDK(默认)-->
    <aop:aspectj-autoproxy/>
</beans>